version: "3.9"

services:
  medcat-service:
    image: cogstacksystems/medcat-service:latest
    container_name: medcat-service
    ports:
      - "5000:5000"
    volumes:
      - ./models:/cat/models:rw
      - ./medcat-init.sh:/medcat-init.sh:ro
    entrypoint: ["/bin/bash", "/medcat-init.sh"]
    restart: unless-stopped
    networks:
      - app-network
    environment:
      - APP_MODEL_CDB_PATH=/cat/models/medmen.cdb
      - APP_MODEL_VOCAB_PATH=/cat/models/vocab.dat
      - env-file=env/app.env \
      - env-file=env/medcat.env \
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/info"]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 2m

  fastapi-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-backend
    ports:
      - "8000:8000"
    depends_on:
      medcat-service:
        condition: service_healthy
    environment:
      - MEDCAT_URL=http://medcat-service:5000/api/process
    volumes:
      - .:/app
    working_dir: /app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - app-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "3000:3000"
    depends_on:
      - fastapi-backend
    networks:
      - app-network
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8000
      - REACT_APP_BACKEND_WS_URL=ws://localhost:8000

networks:
  app-network:
    driver: bridge
